%YAML 1.2
---
name: mustache
file_extensions: ['mustache', 'hjs', 'hgn']
scope: text.mustache

contexts:
  main:
    - match: ''
      push: 'Packages/HTML/HTML.sublime-syntax'
      with_prototype:
        - include: unescape
        - include: amp-unescape
        - include: comment
        - include: block

  unescape:
    - match: '({{{)'
      captures:
        '0': meta.block.begin.mustache.unescape
      push:
        - match: '([^}{]+)'
          scope: variable.parameter.mustache.unescaped
        - match: '(}}})'
          captures:
            '0': meta.block.begin.mustache.unescape
          pop: true

  amp-unescape:
    - match: '({{\s*&)'
      captures:
        '0': meta.block.begin.mustache.unescape
      push:
        - match: '([^}{]+)'
          scope: variable.parameter.mustache.unescaped
        - match: '(}})'
          captures:
            '0': meta.block.begin.mustache.unescape
          pop: true

  comment:
    - match: '({{\s*!)'
      scope: comment.block.mustache
      push:
      - match: '([^}{]+)'
        scope: comment.block.mustache
      - match: '}}'
        pop: true
        scope: comment.block.mustache

  block:
    - match: '({{)'
      scope: meta.block.begin.mustache
      captures:
        '1': punctuation.definition.tag.begin
      push:
      - match: '(}})'
        captures:
          '1': punctuation.definition.tag.end
        pop: true
        scope: meta.block.end.mustache
      - include: sections
      - include: partial
      - include: variable


  sections:
    - match: '\s*(#|\^)\s*([^}{]+)\s*'
      captures:
        1: keyword.control.start.mustache
        2: entity.name.tag.mustache
      scope: meta.block.section.start.mustache
    - match: '\s*(/)\s*([^}{]+)\s*'
      captures:
        1: keyword.control.end.mustache
        2: entity.name.tag.mustache
      scope: meta.block.section.end.mustache

  variable:
    - match: '\s*[^}{]+\s*'
      scope: variable.parameter.mustache

  partial:
    - match: '\s*(>)\s*([^}{]+)\s*'
      captures:
        1: keyword.control.start.mustache
        2: entity.name.section.mustache
